{"version":3,"sources":["webpack://Sketchpad/webpack/universalModuleDefinition","webpack://Sketchpad/webpack/bootstrap","webpack://Sketchpad/./src/sketchpad.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Sketchpad","el","opts","this","sketching","_strokes","undoneStrokes","aspectRatio","lineWidth","lineColor","lineCap","lineJoin","lineMiterLimit","Error","setOptions","canvas","document","createElement","style","touchAction","ctx","getContext","width","clientWidth","height","setCanvasSize","appendChild","length","redraw","listen","map","toObj","configurable","backgroundColor","line","size","color","cap","join","miterLimit","toJSON","strokes","loadJSON","data","strokeObjs","Stroke","fromObj","toDataURL","type","setAttribute","toString","getCanvasSize","setLineWidth","setLineSize","setLineColor","undo","push","pop","redo","clear","drawLine","start","end","lineOpts","getPointRelativeToCanvas","Point","x","y","pushStroke","resize","point","getLineSizeRelativeToCanvas","_a","_b","_c","_d","_e","_f","onDrawEnd","getCursorRelativeToCanvas","e","pointerEvent","rect","getBoundingClientRect","clientX","left","clientY","top","normalizePoint","getLineWidthRelativeToCanvas","normalizeLineWidth","clearCanvas","clearRect","fillStyle","fillRect","drawStroke","stroke","points","beginPath","moveTo","lineTo","closePath","strokeStyle","pushPoint","_this","forEach","addEventListener","startStrokeHandler","drawStrokeHandler","endStrokeHandler","preventDefault","default"],"mappings":"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","file":"sketchpad.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"responsive-sketchpad\"] = factory();\n\telse\n\t\troot[\"Sketchpad\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Sketchpad = /** @class */ (function () {\n    function Sketchpad(el, opts) {\n        this.sketching = false;\n        this._strokes = []; // v2.0 - Rename to strokes\n        this.undoneStrokes = [];\n        this.aspectRatio = 1; // v2.0 - Remove; rely on canvas as source-of-truth\n        this.lineWidth = 5;\n        this.lineColor = '#000';\n        this.lineCap = 'round';\n        this.lineJoin = 'round';\n        this.lineMiterLimit = 10;\n        if (el == null) {\n            throw new Error('Must pass in a container element');\n        }\n        if (opts != null) {\n            this.setOptions(opts);\n        }\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.touchAction = 'none';\n        this.ctx = this.canvas.getContext('2d');\n        var width = (opts === null || opts === void 0 ? void 0 : opts.width) || el.clientWidth;\n        var height = (opts === null || opts === void 0 ? void 0 : opts.height) || width * this.aspectRatio;\n        this.setCanvasSize(width, height);\n        el.appendChild(this.canvas);\n        if (this._strokes.length > 0) {\n            this.redraw();\n        }\n        this.listen();\n    }\n    Object.defineProperty(Sketchpad.prototype, \"strokes\", {\n        // v2.0 - Remove; rename `_strokes`\n        get: function () {\n            return this._strokes.map(function (s) { return s.toObj(); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sketchpad.prototype, \"undos\", {\n        // v2.0 - Remove\n        get: function () {\n            return this.undoneStrokes.map(function (s) { return s.toObj(); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sketchpad.prototype, \"opts\", {\n        // v2.0 - Remove\n        get: function () {\n            return {\n                backgroundColor: this.backgroundColor,\n                width: this.canvas.width,\n                height: this.canvas.height,\n                aspectRatio: this.canvas.width / this.canvas.height,\n                line: {\n                    size: this.lineWidth,\n                    color: this.lineColor,\n                    cap: this.lineCap,\n                    join: this.lineJoin,\n                    miterLimit: this.lineMiterLimit\n                }\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Convert the sketchpad to a JSON object that can be loaded into\n    // other sketchpads or stored on a server\n    Sketchpad.prototype.toJSON = function () {\n        return {\n            aspectRatio: this.canvas.width / this.canvas.height,\n            strokes: this.strokes\n        };\n    };\n    // Load a json object into the sketchpad\n    Sketchpad.prototype.loadJSON = function (data) {\n        var strokeObjs = data.strokes || [];\n        this._strokes = strokeObjs.map(function (s) { return Stroke.fromObj(s); });\n        this.redraw();\n    };\n    // Converts to image File\n    Sketchpad.prototype.toDataURL = function (type) {\n        return this.canvas.toDataURL(type);\n    };\n    // Set the size of canvas\n    Sketchpad.prototype.setCanvasSize = function (width, height) {\n        this.canvas.setAttribute('width', width.toString());\n        this.canvas.setAttribute('height', height.toString());\n        this.canvas.style.width = width + 'px';\n        this.canvas.style.height = height + 'px';\n    };\n    // Get the size of the canvas\n    Sketchpad.prototype.getCanvasSize = function () {\n        return {\n            width: this.canvas.width,\n            height: this.canvas.height\n        };\n    };\n    // Set the line width\n    Sketchpad.prototype.setLineWidth = function (width) {\n        this.lineWidth = width;\n    };\n    // Set the line width\n    Sketchpad.prototype.setLineSize = function (size) {\n        this.lineWidth = size;\n    };\n    // Set the line color\n    Sketchpad.prototype.setLineColor = function (color) {\n        this.lineColor = color;\n    };\n    // Undo the last stroke\n    Sketchpad.prototype.undo = function () {\n        if (this._strokes.length === 0) {\n            return;\n        }\n        this.undoneStrokes.push(this._strokes.pop());\n        this.redraw();\n    };\n    // Redo the last undone stroke\n    Sketchpad.prototype.redo = function () {\n        if (this.undoneStrokes.length === 0) {\n            return;\n        }\n        this._strokes.push(this.undoneStrokes.pop());\n        this.redraw();\n    };\n    // Clear the sketchpad\n    Sketchpad.prototype.clear = function () {\n        this.undoneStrokes = [];\n        this._strokes = [];\n        this.redraw();\n    };\n    // Draw a straight line\n    Sketchpad.prototype.drawLine = function (start, end, lineOpts) {\n        this.setOptions({ line: lineOpts });\n        start = this.getPointRelativeToCanvas(new Point(start.x, start.y));\n        end = this.getPointRelativeToCanvas(new Point(end.x, end.y));\n        this.pushStroke([start, end]);\n        this.redraw();\n    };\n    // Resize the canvas maintaining original aspect ratio\n    Sketchpad.prototype.resize = function (width) {\n        var height = width * this.aspectRatio;\n        this.lineWidth = this.lineWidth * (width / this.canvas.width);\n        this.setCanvasSize(width, height);\n        this.redraw();\n    };\n    // Returns a points x,y locations relative to the size of the canvas\n    Sketchpad.prototype.getPointRelativeToCanvas = function (point) {\n        return {\n            x: point.x / this.canvas.width,\n            y: point.y / this.canvas.height\n        };\n    };\n    //  Get the line size relative to the size of the canvas\n    Sketchpad.prototype.getLineSizeRelativeToCanvas = function (width) {\n        return width / this.canvas.width;\n    };\n    Sketchpad.prototype.setOptions = function (opts) {\n        var _a, _b, _c, _d, _e, _f;\n        if (opts.backgroundColor) {\n            this.backgroundColor = opts.backgroundColor;\n        }\n        if ((_a = opts.line) === null || _a === void 0 ? void 0 : _a.size) {\n            this.lineWidth = opts.line.size;\n        }\n        if ((_b = opts.line) === null || _b === void 0 ? void 0 : _b.cap) {\n            this.lineCap = opts.line.cap;\n        }\n        if ((_c = opts.line) === null || _c === void 0 ? void 0 : _c.join) {\n            this.lineJoin = opts.line.join;\n        }\n        if ((_d = opts.line) === null || _d === void 0 ? void 0 : _d.miterLimit) {\n            this.lineMiterLimit = opts.line.miterLimit;\n        }\n        if (opts.aspectRatio) {\n            this.aspectRatio = opts.aspectRatio;\n        }\n        if (opts.data) {\n            this._strokes = (_f = (_e = opts.data.strokes) === null || _e === void 0 ? void 0 : _e.map(function (s) { return Stroke.fromObj(s); })) !== null && _f !== void 0 ? _f : [];\n        }\n        if (opts.onDrawEnd) {\n            this.onDrawEnd = opts.onDrawEnd;\n        }\n    };\n    // For a given event, get the point at which the event occurred\n    // relative to the canvas\n    Sketchpad.prototype.getCursorRelativeToCanvas = function (e) {\n        var pointerEvent = e;\n        var rect = this.canvas.getBoundingClientRect();\n        var point = new Point(pointerEvent.clientX - rect.left, pointerEvent.clientY - rect.top);\n        return new Point(point.x / this.canvas.width, point.y / this.canvas.height);\n    };\n    Sketchpad.prototype.normalizePoint = function (p) {\n        return new Point(p.x * this.canvas.width, p.y * this.canvas.height);\n    };\n    Sketchpad.prototype.getLineWidthRelativeToCanvas = function (size) {\n        return size / this.canvas.width;\n    };\n    Sketchpad.prototype.normalizeLineWidth = function (width) {\n        return width * this.canvas.width;\n    };\n    // Erase the entire canvas\n    Sketchpad.prototype.clearCanvas = function () {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        if (this.backgroundColor) {\n            this.ctx.fillStyle = this.backgroundColor;\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n    };\n    // Draw a single stroke\n    Sketchpad.prototype.drawStroke = function (stroke) {\n        if (stroke.points == null)\n            return;\n        this.ctx.beginPath();\n        for (var i = 0; i < stroke.points.length - 1; i++) {\n            var start = this.normalizePoint(stroke.points[i]);\n            var end = this.normalizePoint(stroke.points[i + 1]);\n            this.ctx.moveTo(start.x, start.y);\n            this.ctx.lineTo(end.x, end.y);\n        }\n        this.ctx.closePath();\n        if (stroke.color) {\n            this.ctx.strokeStyle = stroke.color;\n        }\n        if (stroke.width) {\n            this.ctx.lineWidth = this.normalizeLineWidth(stroke.width);\n        }\n        if (stroke.join) {\n            this.ctx.lineJoin = stroke.join;\n        }\n        if (stroke.cap) {\n            this.ctx.lineCap = stroke.cap;\n        }\n        if (stroke.miterLimit) {\n            this.ctx.miterLimit = stroke.miterLimit;\n        }\n        this.ctx.stroke();\n    };\n    Sketchpad.prototype.pushStroke = function (points) {\n        this._strokes.push(Stroke.fromObj({\n            points: points,\n            size: this.getLineWidthRelativeToCanvas(this.lineWidth),\n            color: this.lineColor,\n            cap: this.lineCap,\n            join: this.lineJoin,\n            miterLimit: this.lineMiterLimit\n        }));\n    };\n    Sketchpad.prototype.pushPoint = function (point) {\n        var stroke = this._strokes[this._strokes.length - 1];\n        if (stroke.points) {\n            stroke.points.push(point);\n        }\n    };\n    // Redraw the whole canvas\n    Sketchpad.prototype.redraw = function () {\n        var _this = this;\n        this.clearCanvas();\n        this._strokes.forEach(function (s) { return _this.drawStroke(s); });\n    };\n    Sketchpad.prototype.listen = function () {\n        var _this = this;\n        this.canvas.addEventListener('pointerdown', function (e) { return _this.startStrokeHandler(e); });\n        this.canvas.addEventListener('pointermove', function (e) { return _this.drawStrokeHandler(e); });\n        ['pointerleave', 'pointerup'].forEach(function (name) { return _this.canvas.addEventListener(name, function (e) { return _this.endStrokeHandler(e); }); });\n    };\n    Sketchpad.prototype.startStrokeHandler = function (e) {\n        e.preventDefault();\n        this.sketching = true;\n        var point = this.getCursorRelativeToCanvas(e);\n        this.pushStroke([point]);\n        this.redraw();\n    };\n    Sketchpad.prototype.drawStrokeHandler = function (e) {\n        e.preventDefault();\n        if (!this.sketching)\n            return;\n        var point = this.getCursorRelativeToCanvas(e);\n        this.pushPoint(point);\n        this.redraw();\n    };\n    Sketchpad.prototype.endStrokeHandler = function (e) {\n        e.preventDefault();\n        if (!this.sketching)\n            return;\n        this.sketching = false;\n        var point = this.getCursorRelativeToCanvas(e);\n        this.pushPoint(point);\n        this.redraw();\n        if (this.onDrawEnd) {\n            this.onDrawEnd();\n        }\n    };\n    return Sketchpad;\n}());\nexports.default = Sketchpad;\nvar Point = /** @class */ (function () {\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Point;\n}());\nvar Stroke = /** @class */ (function () {\n    function Stroke() {\n    }\n    Stroke.fromObj = function (s) {\n        var stroke = new Stroke();\n        stroke.points = s.points;\n        stroke.width = s.size;\n        stroke.color = s.color;\n        stroke.cap = s.cap;\n        stroke.join = s.join;\n        stroke.miterLimit = s.miterLimit;\n        return stroke;\n    };\n    Stroke.prototype.toObj = function () {\n        return {\n            points: this.points,\n            size: this.width,\n            color: this.color,\n            cap: this.cap,\n            join: this.join,\n            miterLimit: this.miterLimit\n        };\n    };\n    return Stroke;\n}());\n"],"sourceRoot":""}
